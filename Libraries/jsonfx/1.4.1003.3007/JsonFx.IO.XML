<?xml version="1.0"?>
<doc>
    <assembly>
        <name>JsonFx.IO</name>
    </assembly>
    <members>
        <member name="T:JsonFx.JsonRpc.Proxy.JsonServiceProxyGenerator">
            <summary>
            Generates a JavaScript proxy class for communicating with a JsonService.
            </summary>
        </member>
        <member name="T:JsonFx.JsonRpc.JsonRequest">
            <summary>
            The message that frames a call and its parameters.
            </summary>
        </member>
        <member name="P:JsonFx.JsonRpc.JsonMessage.ID">
            <summary>
            Gets and sets an identifier which may be used to correlate a response with its request.
            </summary>
            <remarks>
            A Request identifier that SHOULD be a JSON scalar (String, Number, True, False),
            but SHOULD normally not be Null. If omitted, the Request is a Notification.
            
            This id can be used to correlate a Response with its Request. The server MUST
            repeat it verbatim on the Response.
            </remarks>
        </member>
        <member name="P:JsonFx.JsonRpc.JsonMessage.Version">
            <summary>
            Gets and sets the version of the JSON-RPC specification to which this conforms.
            </summary>
            <remarks>
            A String specifying the version of the JSON-RPC protocol. MUST be exactly "2.0". 
            
            If jsonrpc is missing, the server MAY handle the Request as JSON-RPC V1.0-Request.
            </remarks>
        </member>
        <member name="P:JsonFx.JsonRpc.JsonMessage.IsJsonRpc10">
            <summary>
            Gets if the version is missing indicating this is a v1.0 message.
            </summary>
        </member>
        <member name="P:JsonFx.JsonRpc.JsonRequest.Method">
            <summary>
            Gets and sets the named operation on a service that is the target of this remote procedure call.
            </summary>
            <remarks>
            A String containing the name of the procedure to be invoked.
            
            Procedure names that begin with the word system followed by a period character (U+002E or ASCII 46)
            are reserved for system description / introspection.
            </remarks>
        </member>
        <member name="P:JsonFx.JsonRpc.JsonRequest.Params">
            <summary>
            Gets and sets the actual parameter values for the invocation of the procedure.
            </summary>
            <remarks>
            An Array or Object, that holds the actual parameter values for the invocation of
            the procedure. Can be omitted if empty.
            </remarks>
        </member>
        <member name="P:JsonFx.JsonRpc.JsonRequest.NamedParams">
            <summary>
            Gets and sets the named parameter values for this remote procedure call.
            Mutually exclusive with <see cref="P:JsonFx.JsonRpc.JsonRequest.PositionalParams">PositionalParams</see>.
            </summary>
            <remarks>
            MUST be an Object, containing the parameter-names and its values.
            The names MUST match exactly (including case) the names defined by the formal arguments.
            The order of the name/value-pairs is insignificant.
            </remarks>
        </member>
        <member name="P:JsonFx.JsonRpc.JsonRequest.PositionalParams">
            <summary>
            Gets and sets the positional parameter values for this remote procedure call.
            Mutually exclusive with <see cref="P:JsonFx.JsonRpc.JsonRequest.NamedParams">NamedParams</see>.
            </summary>
            <remarks>
            MUST be an Array, containing the parameters in the right order (like in JSON-RPC 1.0).
            </remarks>
        </member>
        <member name="P:JsonFx.JsonRpc.JsonRequest.IsNotification">
            <summary>
            Gets if this request is a notification.
            </summary>
            <remarks>
            A Notification is a special Request, without id and without Response.
            The server MUST NOT reply to a Notification.
            
            Note that Notifications are unreliable by definition, since they do not have a Response,
            and so you cannot detect errors (like e.g. "Invalid params.", "Internal error.",
            timeouts or maybe even lost packets on the wire).
            </remarks>
        </member>
        <member name="T:JsonFx.JsonRpc.JsonMethodAttribute">
            <summary>
            Specifies the method information to use when serializing to JSON.
            </summary>
        </member>
        <member name="T:JsonFx.JsonRpc.JsonDocsAttribute">
            <summary>
            Gets the help url for use in Json service description.
            </summary>
        </member>
        <member name="M:JsonFx.JsonRpc.JsonDocsAttribute.#ctor">
            <summary>
            Ctor.
            </summary>
        </member>
        <member name="M:JsonFx.JsonRpc.JsonDocsAttribute.#ctor(System.String)">
            <summary>
            Ctor.
            </summary>
            <param name="jsonName"></param>
        </member>
        <member name="M:JsonFx.JsonRpc.JsonDocsAttribute.GetHelpUrl(System.Object)">
            <summary>
            Gets the help url for use in Json service description.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="P:JsonFx.JsonRpc.JsonDocsAttribute.HelpUrl">
            <summary>
            Gets and sets the URL which points to help documentation
            </summary>
        </member>
        <member name="M:JsonFx.JsonRpc.JsonMethodAttribute.#ctor">
            <summary>
            Ctor.
            </summary>
        </member>
        <member name="M:JsonFx.JsonRpc.JsonMethodAttribute.#ctor(System.String)">
            <summary>
            Ctor.
            </summary>
            <param name="jsonName"></param>
        </member>
        <member name="M:JsonFx.JsonRpc.JsonMethodAttribute.IsJsonMethod(System.Object)">
            <summary>
            Gets the name specified for use in Json serialization.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:JsonFx.JsonRpc.JsonMethodAttribute.IsIdempotent(System.Object)">
            <summary>
            Gets the name specified for use in Json serialization.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="P:JsonFx.JsonRpc.JsonMethodAttribute.Idempotent">
            <summary>
            
            </summary>
        </member>
        <member name="M:JsonFx.JsonRpc.RequestEventArgs.#ctor(System.Web.HttpContext)">
            <summary>
            Ctor
            </summary>
            <param name="context"></param>
        </member>
        <member name="P:JsonFx.JsonRpc.RequestEventArgs.Context">
            <summary>
            Gets the HttpContext for this request.
            </summary>
        </member>
        <member name="M:JsonFx.JsonRpc.JrpcEventArgs.#ctor(System.Web.HttpContext,JsonFx.JsonRpc.JsonRequest,JsonFx.JsonRpc.JsonResponse)">
            <summary>
            Ctor
            </summary>
            <param name="context"></param>
            <param name="request"></param>
            <param name="response"></param>
        </member>
        <member name="P:JsonFx.JsonRpc.JrpcEventArgs.Request">
            <summary>
            Gets the JSON-RPC Request message.
            </summary>
        </member>
        <member name="P:JsonFx.JsonRpc.JrpcEventArgs.Response">
            <summary>
            Gets the JSON-RPC Response message.
            </summary>
            <remarks>
            This can be manipulated to produce an entirely different response.
            </remarks>
        </member>
        <member name="M:JsonFx.JsonRpc.JrpcErrorEventArgs.#ctor(System.Web.HttpContext,JsonFx.JsonRpc.JsonRequest,JsonFx.JsonRpc.JsonResponse,System.Exception)">
            <summary>
            Ctor
            </summary>
            <param name="context"></param>
            <param name="request"></param>
            <param name="response"></param>
            <param name="exception"></param>
        </member>
        <member name="P:JsonFx.JsonRpc.JrpcErrorEventArgs.Exception">
            <summary>
            Gets the exception that raised the error.
            </summary>
        </member>
        <member name="M:JsonFx.JsonRpc.Settings.DeserializeJsonRpc(System.IO.Stream)">
            <summary>
            Parses an incoming JSON-RPC request object
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:JsonFx.JsonRpc.Settings.SerializeJsonRpc(System.IO.TextWriter,JsonFx.JsonRpc.JsonResponse)">
            <summary>
            Serializes an outgoing JSON-RPC response object
            </summary>
            <param name="output"></param>
            <param name="response"></param>
        </member>
        <member name="P:JsonFx.JsonRpc.Settings.AllowGetMethod">
            <summary>
            Gets and sets if GET requests are allowed for JSON-RPC Services.
            Default is false (GET HTTP Method forbidden).
            </summary>
            <remarks>
            For better security leave this false, as it is harder to produce
            valid POST requests via script injection / cross-site forgery.
            </remarks>
        </member>
        <member name="P:JsonFx.JsonRpc.Settings.DisableStreamCompression">
            <summary>
            Gets and sets if non-debug responses are compressed.
            Default is false (compression enabled).
            </summary>
        </member>
        <member name="M:JsonFx.JsonRpc.Discovery.JsonDescriptionBase.#ctor">
            <summary>
            Ctor.
            </summary>
        </member>
        <member name="T:JsonFx.JsonRpc.IJsonServiceInfo">
            <summary>
            Runtime adapter between service infrastructure and service implementation
            </summary>
        </member>
        <member name="M:JsonFx.JsonRpc.IJsonServiceInfo.CreateService">
            <summary>
            Factory Method for the Service class
            </summary>
            <returns></returns>
        </member>
        <member name="M:JsonFx.JsonRpc.IJsonServiceInfo.ResolveMethodName(System.String)">
            <summary>
            Method map for the Service class
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:JsonFx.JsonRpc.IJsonServiceInfo.GetMethodParams(System.String)">
            <summary>
            Param map for the Service class
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="P:JsonFx.JsonRpc.IJsonServiceInfo.ServiceType">
            <summary>
            Gets the Type used to implement the service
            </summary>
        </member>
        <member name="T:JsonFx.JsonRpc.JsonRpcErrors">
            <summary>
            The error-codes -32768 .. -32000 (inclusive) are reserved for pre-defined errors.
            Any error-code within this range not defined explicitly below is reserved for future use.
            </summary>
        </member>
        <member name="F:JsonFx.JsonRpc.JsonRpcErrors.ParseError">
            <summary>
            Invalid JSON. An error occurred on the server while parsing the JSON text.
            </summary>
        </member>
        <member name="F:JsonFx.JsonRpc.JsonRpcErrors.InvalidRequest">
            <summary>
            The received JSON not a valid JSON-RPC Request.
            </summary>
        </member>
        <member name="F:JsonFx.JsonRpc.JsonRpcErrors.MethodNotFound">
            <summary>
            The requested remote-procedure does not exist / is not available.
            </summary>
        </member>
        <member name="F:JsonFx.JsonRpc.JsonRpcErrors.InvalidParams">
            <summary>
            Invalid method parameters.
            </summary>
        </member>
        <member name="F:JsonFx.JsonRpc.JsonRpcErrors.InternalError">
            <summary>
            Internal JSON-RPC error.
            </summary>
        </member>
        <member name="F:JsonFx.JsonRpc.JsonRpcErrors.ServerErrorStart">
            <summary>
            Reserved for implementation-defined server-errors.
            </summary>
        </member>
        <member name="M:JsonFx.JsonRpc.JsonError.#ctor">
            <summary>
            Ctor.
            </summary>
        </member>
        <member name="M:JsonFx.JsonRpc.JsonError.#ctor(System.Exception)">
            <summary>
            Ctor.
            </summary>
            <param name="ex"></param>
        </member>
        <member name="M:JsonFx.JsonRpc.JsonError.#ctor(System.Exception,JsonFx.JsonRpc.JsonRpcErrors)">
            <summary>
            Ctor
            </summary>
            <param name="ex"></param>
            <param name="code"></param>
        </member>
        <member name="P:JsonFx.JsonRpc.JsonError.Code">
            <summary>
            Gets and sets a Number value that indicates the actual error that occurred.
            </summary>
            <remarks>
            A Number that indicates the actual error that occurred. This MUST be an integer.
            </remarks>
        </member>
        <member name="P:JsonFx.JsonRpc.JsonError.Message">
            <summary>
            Gets and sets a short description of the error.
            </summary>
            <remarks>
            A String providing a short description of the error.
            The message SHOULD be limited to a concise single sentence.
            </remarks>
        </member>
        <member name="P:JsonFx.JsonRpc.JsonError.Data">
            <summary>
            Gets and sets data about the error.
            </summary>
            <remarks>
            Additional information, may be omitted. Its contents is entirely defined by
            the application (e.g. detailed error information, nested errors etc.).
            </remarks>
        </member>
        <member name="P:JsonFx.JsonRpc.JsonError.DataDictionary">
            <summary>
            Convenience property which gets the Data object as a typed dictionary.
            </summary>
        </member>
        <member name="T:JsonFx.JsonRpc.JsonResponse">
            <summary>
            The message that frames the result of a successful call or the error in the case of a failed call.
            </summary>
        </member>
        <member name="P:JsonFx.JsonRpc.JsonResponse.Result">
            <summary>
            Gets and sets the answer for a successful call.
            </summary>
            <remarks>
            Required on success, omitted on failure.
            The Value that was returned by the procedure. Its contents is entirely defined by the procedure.
            This member MUST be entirely omitted if there was an error invoking the procedure.
            
            Exactly one of result or error MUST be specified. It's not allowed to specify both or none.
            </remarks>
        </member>
        <member name="P:JsonFx.JsonRpc.JsonResponse.Error">
            <summary>
            Gets and sets the answer for a failed call.
            </summary>
            <remarks>
            Required on error, omitted on success.
            An Object containing error information about the fault that occurred before, during or after the call.
            This member MUST be entirely omitted if there was no such fault.
            
            Exactly one of result or error MUST be specified. It's not allowed to specify both or none.
            </remarks>
        </member>
        <member name="T:JsonFx.JsonRpc.JsonRpcUtility">
            <summary>
            Utility class for calling JSON-RPC services from C#
            </summary>
        </member>
        <member name="M:JsonFx.JsonRpc.JsonRpcUtility.CallService``1(System.Uri,System.String,System.Object[])">
            <summary>
            Helper method for calling a JSON-RPC service from C#
            </summary>
            <typeparam name="T"></typeparam>
            <param name="service"></param>
            <param name="methodName"></param>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:JsonFx.JsonRpc.JsonRpcUtility.CallService``1(System.Uri,System.String,System.Object[],System.Net.CookieCollection@)">
            <summary>
            Helper method for calling a JSON-RPC service from C#
            </summary>
            <typeparam name="T"></typeparam>
            <param name="service"></param>
            <param name="methodName"></param>
            <param name="args"></param>
            <param name="cookies"></param>
            <returns></returns>
        </member>
        <member name="M:JsonFx.JsonRpc.JsonRpcUtility.CallService``1(System.Uri,System.String,System.Object[],System.Net.CookieCollection@,System.Boolean)">
            <summary>
            Helper method for calling a JSON-RPC service from C#
            </summary>
            <typeparam name="T"></typeparam>
            <param name="service"></param>
            <param name="methodName"></param>
            <param name="args"></param>
            <param name="cookies"></param>
            <param name="ignoreCertErrors"></param>
            <returns></returns>
        </member>
        <member name="M:JsonFx.JsonRpc.Discovery.JsonParameterDescription.#ctor(System.Reflection.ParameterInfo)">
            <summary>
            Ctor.
            </summary>
        </member>
        <member name="P:JsonFx.JsonRpc.Discovery.JsonParameterDescription.Type">
            <summary>
            Gets and sets a summary of the purpose of the service.
            </summary>
            <remarks>
            OPTIONAL. A String value that denotes the expected value type for the
            parameter. If this member is not supplied or is the Null value then
            the type is defined "any".
            </remarks>
        </member>
        <member name="M:JsonFx.JsonRpc.Discovery.JsonNamedParameterDescription.#ctor(System.Reflection.ParameterInfo)">
            <summary>
            Ctor.
            </summary>
        </member>
        <member name="P:JsonFx.JsonRpc.Discovery.JsonNamedParameterDescription.Name">
            <summary>
            Gets and sets a simple name for the parameter.
            </summary>
            <remarks>
            REQUIRED. A String value that provides a simple name for parameter.
            </remarks>
        </member>
        <member name="T:JsonFx.JsonRpc.JsonServiceAttribute">
            <summary>
            Specifies the service information to use when serializing to JSON.
            </summary>
        </member>
        <member name="M:JsonFx.JsonRpc.JsonServiceAttribute.#ctor">
            <summary>
            Ctor.
            </summary>
        </member>
        <member name="M:JsonFx.JsonRpc.JsonServiceAttribute.IsJsonService(System.Object)">
            <summary>
            Gets the name specified for use in Json serialization.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:JsonFx.JsonRpc.JsonServiceAttribute.GetNamespace(System.Object)">
            <summary>
            Gets the namespace for use in JSON service proxy.
            </summary>
            <param name="value"></param>
            <returns>proxy namespace</returns>
        </member>
        <member name="P:JsonFx.JsonRpc.JsonServiceAttribute.Namespace">
            <summary>
            Gets ans sets the namespace to be used when generating the service proxy
            </summary>
        </member>
        <member name="M:JsonFx.Handlers.JsonServiceHandler.#ctor(JsonFx.JsonRpc.IJsonServiceInfo,System.String)">
            <summary>
            Ctor
            </summary>
            <param name="serviceInfo"></param>
            <param name="serviceUrl"></param>
        </member>
        <member name="P:JsonFx.Handlers.JsonServiceHandler.Service">
            <summary>
            Gets the service object servicing the request
            </summary>
        </member>
        <member name="M:JsonFx.JsonRpc.Discovery.JsonServiceDescription.#ctor(System.Type,System.String)">
            <summary>
            Ctor.
            </summary>
        </member>
        <member name="P:JsonFx.JsonRpc.Discovery.JsonServiceDescription.Namespace">
            <summary>
            Gets and sets a namespace for the service proxy.
            </summary>
            <remarks>
            Not part of service description, but used when generating
            service proxy from service description.
            </remarks>
        </member>
        <member name="P:JsonFx.JsonRpc.Discovery.JsonServiceDescription.SDVersion">
            <summary>
            Gets and sets the version of service description to which this conforms.
            </summary>
            <remarks>
            REQUIRED. A String value that represents the version number of this object
            and MUST read "1.0" for conforming implementations.
            </remarks>
        </member>
        <member name="P:JsonFx.JsonRpc.Discovery.JsonServiceDescription.Name">
            <summary>
            Gets and sets a simple name for the service.
            </summary>
            <remarks>
            REQUIRED. A String value that provides a simple name for the service.
            </remarks>
        </member>
        <member name="P:JsonFx.JsonRpc.Discovery.JsonServiceDescription.ID">
            <summary>
            Gets and sets a unique identifier for the service.
            </summary>
            <remarks>
            REQUIRED. A String value that uniquely and globally identifies the
            service. The string MUST use the URI Generic Syntax (RFC 3986). 
            </remarks>
        </member>
        <member name="P:JsonFx.JsonRpc.Discovery.JsonServiceDescription.Version">
            <summary>
            Gets and sets the version number of this service.
            </summary>
            <remarks>
            OPTIONAL. A String value that indicates version number of the
            service and MAY be used by the applications for checking compatibility.
            The version number, when present, MUST include a major and minor
            component separated by a period (U+002E or ASCII 46). The major
            and minor components MUST use decimal digits (0 to 9) only. For example,
            use "2.5" to mean a major version of 2 and a minor version of 5. The
            use and interpretation of the version number is left at the discretion
            of the applications treating the Service Description.
            </remarks>
        </member>
        <member name="P:JsonFx.JsonRpc.Discovery.JsonServiceDescription.Summary">
            <summary>
            Gets and sets a summary of the purpose of the service.
            </summary>
            <remarks>
            OPTIONAL. A String value that summarizes the purpose of the service.
            This SHOULD be kept to a maximum of 5 sentences and often limited to a
            single phrase like, "The News Search service allows you to search the
            Internet for news stories."
            </remarks>
        </member>
        <member name="P:JsonFx.JsonRpc.Discovery.JsonServiceDescription.Help">
            <summary>
            Gets and sets a help documentation for the service.
            </summary>
            <remarks>
            OPTIONAL. A String value that is a URL from where human-readable
            documentation about the service may be obtained.
            </remarks>
        </member>
        <member name="P:JsonFx.JsonRpc.Discovery.JsonServiceDescription.Address">
            <summary>
            Gets and sets the URL of the service end-point to which the remote procedure calls can be targeted.
            </summary>
            <remarks>
            OPTIONAL. A String value that is the URL of the service end-point to
            which the remote procedure calls can be targeted. The protocol scheme
            of this URL SHOULD be http or https. Although this value is optional,
            it is highly RECOMMENDED that a service always publish its address so
            that a service description obtained indirectly can be used nonetheless
            to locate the service.
            </remarks>
        </member>
        <member name="P:JsonFx.JsonRpc.Discovery.JsonServiceDescription.Methods">
            <summary>
            Gets and sets a help documentation for the service.
            </summary>
            <remarks>
            OPTIONAL. A String value that is a URL from where human-readable
            documentation about the service may be obtained.
            </remarks>
        </member>
        <member name="T:JsonFx.Compilation.JsonServiceBuildProvider">
            <summary>
            BuildProvider for JSON-RPC services.
            </summary>
        </member>
        <member name="M:JsonFx.Compilation.JsonServiceBuildProvider.CreateParamMap(System.Reflection.MethodInfo)">
            <summary>
            Gets a mapping of parameter position to parameter name for a given method.
            </summary>
            <param name="method"></param>
            <returns></returns>
        </member>
        <member name="M:JsonFx.Compilation.JsonServiceBuildProvider.CreateMethodMap(System.Type)">
            <summary>
            Gets a mapping of method JsonName to MethodInfo for a given type.
            </summary>
            <param name="serviceType"></param>
            <returns></returns>
        </member>
        <member name="M:JsonFx.JsonRpc.Discovery.JsonMethodDescription.#ctor(System.Reflection.MethodInfo)">
            <summary>
            Ctor.
            </summary>
        </member>
        <member name="P:JsonFx.JsonRpc.Discovery.JsonMethodDescription.Name">
            <summary>
            Gets and sets a simple name for the method.
            </summary>
            <remarks>
            REQUIRED. A String value that provides a simple name for the method.
            </remarks>
        </member>
        <member name="P:JsonFx.JsonRpc.Discovery.JsonMethodDescription.Summary">
            <summary>
            Gets and sets a summary of the purpose of the service.
            </summary>
            <remarks>
            OPTIONAL. A String value that summarizes the purpose of the service.
            This SHOULD be kept to a maximum of 3 sentences and often limited to
            a single phrase like, "Lets you search for hyperlinks that have been
            tagged by particular tags."
            </remarks>
        </member>
        <member name="P:JsonFx.JsonRpc.Discovery.JsonMethodDescription.Help">
            <summary>
            Gets and sets a URL from where human-readable documentation about the procedure may be obtained.
            </summary>
            <remarks>
            OPTIONAL. A String value that is a URL from where human-readable
            documentation about the procedure may be obtained.
            </remarks>
        </member>
        <member name="P:JsonFx.JsonRpc.Discovery.JsonMethodDescription.Idempotent">
            <summary>
            Gets and sets 
            </summary>
            <remarks>
            OPTIONAL. A Boolean value that indicates whether the procedure is
            idempotent and therefore essentially safe to invoke over an HTTP GET
            transaction. This member MUST be present and true for the procedure
            to be considered idempotent.
            http://www.w3.org/Protocols/rfc2616/rfc2616-sec9.html#sec9.1
            </remarks>
        </member>
        <member name="P:JsonFx.JsonRpc.Discovery.JsonMethodDescription.Params">
            <summary>
            Gets and sets 
            </summary>
            <remarks>
            OPTIONAL. An Array value whose elements are either Procedure Parameter Description
            objects or String values. If an element each of uniquely describes a single
            parameter of the procedure. If the only description that is available of each
            parameter is its name, then a service MAY instead supply an Array of String elements
            for this member and where each element uniquely names a parameter and the parameter
            is assumed to be typed as "any". In either case, the elements of the array MUST be
            ordered after the formal argument list of the procedure being described. If this
            member is missing or the Null value then the procedure does not expect any parameters.
            </remarks>
        </member>
        <member name="P:JsonFx.JsonRpc.Discovery.JsonMethodDescription.Return">
            <summary>
            Gets and sets 
            </summary>
            <remarks>
            OPTIONAL. An Object value that is structured after the Procedure Parameter Description
            and which describes the output from the procedure. Otherwise, if it is a String value,
            then it defines the type of the return value. If this member is missing or is the Null
            value then the return type of the procedure is defined to be "any".
            </remarks>
        </member>
    </members>
</doc>
